name: Code Quality

on:
  pull_request:
    branches: [main, master]
  push:
    branches: [main, master]

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm store cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup node_modules cache
        uses: actions/cache@v4
        with:
          path: node_modules/.pnpm
          key: ${{ runner.os }}-pnpm-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-modules-

      - name: Install dependencies
        id: install
        run: |
          echo "::group::Dependencies Installation"
          start_time=$(date +%s)
          pnpm install --no-frozen-lockfile
          end_time=$(date +%s)
          echo "::endgroup::"
          echo "INSTALL_TIME=$((end_time-start_time))" >> $GITHUB_OUTPUT
          echo "Installation time: $((end_time-start_time)) seconds"

      - name: Check formatting
        run: pnpm format:check

      - name: Lint
        run: pnpm lint

      - name: Type check
        run: pnpm typecheck
