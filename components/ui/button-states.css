/* CSS classes to simulate interactive states for buttons in Storybook */

/* Base state simulation classes */
.simulate-hover {
  /* This will apply the same effect as :hover */
}

.simulate-focus {
  /* This will apply the same effect as :focus-visible */
}

.simulate-active {
  /* This will apply the same effect as :active */
  transform: scale(0.98);
}

/* Variant-specific hover states based on the button component's hover classes */
.simulate-hover.variant-default {
  background-color: var(--primary-90, hsl(var(--primary) / 0.9));
}

.simulate-hover.variant-destructive {
  background-color: var(--destructive-90, hsl(var(--destructive) / 0.9));
}

.simulate-hover.variant-outline {
  background-color: var(--accent, hsl(var(--accent)));
  color: var(--accent-foreground, hsl(var(--accent-foreground)));
}

.simulate-hover.variant-secondary {
  background-color: var(--secondary-80, hsl(var(--secondary) / 0.8));
}

.simulate-hover.variant-ghost {
  background-color: var(--accent, hsl(var(--accent)));
  color: var(--accent-foreground, hsl(var(--accent-foreground)));
}

.simulate-hover.variant-link {
  text-decoration: underline;
}

/* Focus state for all variants */
.simulate-focus {
  outline: none;
  border-color: var(--ring, hsl(var(--ring)));
  box-shadow: 0 0 0 3px var(--ring-50, hsl(var(--ring) / 0.5));
}

/* Focus state for destructive variant */
.simulate-focus.variant-destructive {
  box-shadow: 0 0 0 3px var(--destructive-20, hsl(var(--destructive) / 0.2));
}
